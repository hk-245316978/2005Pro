{"version":3,"sources":["file:///D:/Users/gitPro/MirClent/assets/script/uipanel/MoveSprite.ts"],"names":["_decorator","Component","Node","PolygonCollider2D","Intersection2D","UITransform","v3","v2","ccclass","property","eventTarget","EventTarget","isActive","isMoving","startPoint","mousePoint","start","onLoad","node","on","EventType","TOUCH_START","event_mouse_down","TOUCH_MOVE","event_mouse_move","TOUCH_END","event_mouse_up","onDestroy","off","event","getPosition","getUILocation","collider","getComponent","setSiblingIndex","downPoint","nodePoint","convertToNodeSpaceAR","x","y","points","is","pointInPolygon","preventSwallow","movePointN","getLocation","setPosition","showandhide","active","emit"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAA0BC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,iB,OAAAA,iB;AAAmBC,MAAAA,c,OAAAA,c;AAAgBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,E,OAAAA,E;AAAIC,MAAAA,E,OAAAA,E;;;;;;;;;OAClG;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;AACxBU,MAAAA,W,GAAc,IAAIC,WAAJ,E;;0CAGnBH,OAAO,CAAC,YAAD,C,iBAAR,sBAC8BP,SAD9B,CACwC;AAAA;AAAA;AAEpC;AAFoC,eAGpCW,QAHoC,GAGhB,KAHgB;AAAA,eAIpCC,QAJoC,GAIhB,IAJgB;AAAA,eAKpCC,UALoC;AAAA,eAMpCC,UANoC;AAAA;;AAQpCC,QAAAA,KAAK,GAAG,CACJ;AACA;AACH;;AAEDC,QAAAA,MAAM,GAAI;AACN,eAAKC,IAAL,CAAUC,EAAV,CAAajB,IAAI,CAACkB,SAAL,CAAeC,WAA5B,EAAyC,KAAKC,gBAA9C,EAAgE,IAAhE;AACA,eAAKJ,IAAL,CAAUC,EAAV,CAAajB,IAAI,CAACkB,SAAL,CAAeG,UAA5B,EAAwC,KAAKC,gBAA7C,EAA+D,IAA/D;AACA,eAAKN,IAAL,CAAUC,EAAV,CAAajB,IAAI,CAACkB,SAAL,CAAeK,SAA5B,EAAuC,KAAKC,cAA5C,EAA4D,IAA5D;AACH;;AAEDC,QAAAA,SAAS,GAAI;AACT,eAAKT,IAAL,CAAUU,GAAV,CAAc1B,IAAI,CAACkB,SAAL,CAAeC,WAA7B,EAA0C,KAAKC,gBAA/C,EAAiE,IAAjE;AACA,eAAKJ,IAAL,CAAUU,GAAV,CAAc1B,IAAI,CAACkB,SAAL,CAAeG,UAA7B,EAAyC,KAAKC,gBAA9C,EAAgE,IAAhE;AACA,eAAKN,IAAL,CAAUU,GAAV,CAAc1B,IAAI,CAACkB,SAAL,CAAeK,SAA7B,EAAwC,KAAKC,cAA7C,EAA6D,IAA7D;AACH;;AAEDJ,QAAAA,gBAAgB,CAACO,KAAD,EAAO;AAEnB,eAAKf,UAAL,GAAkB,KAAKI,IAAL,CAAUY,WAAV,EAAlB;AACA,eAAKf,UAAL,GAAkBc,KAAK,CAACE,aAAN,EAAlB,CAHmB,CAInB;;AACA,cAAMC,QAAQ,GAAG,KAAKd,IAAL,CAAUe,YAAV,CAAuB9B,iBAAvB,CAAjB,CALmB,CAMnB;;AACA,cAAI,CAAC6B,QAAL,EAAe;AACX;AACA,iBAAKd,IAAL,CAAUgB,eAAV,CAA0B,EAA1B;AACA,iBAAKtB,QAAL,GAAgB,IAAhB;AACA;AACH,WAZkB,CAanB;;;AACA,cAAMuB,SAAS,GAAGN,KAAK,CAACE,aAAN,EAAlB,CAdmB,CAenB;;AACA,cAAMK,SAAS,GAAG,KAAKlB,IAAL,CAAUe,YAAV,CAAuB5B,WAAvB,EAAoCgC,oBAApC,CAAyD/B,EAAE,CAAC6B,SAAS,CAACG,CAAX,EAAaH,SAAS,CAACI,CAAvB,CAA3D,CAAlB,CAhBmB,CAiBnB;;AACA,cAAMC,MAAM,GAAGR,QAAQ,CAACQ,MAAxB,CAlBmB,CAmBnB;;AACA,cAAMC,EAAE,GAAGrC,cAAc,CAACsC,cAAf,CAA8BnC,EAAE,CAAC6B,SAAS,CAACE,CAAX,EAAaF,SAAS,CAACG,CAAvB,CAAhC,EAA2DC,MAA3D,CAAX;;AACA,cAAIC,EAAJ,EAAQ;AACJ,iBAAKvB,IAAL,CAAUgB,eAAV,CAA0B,EAA1B;AACA,iBAAKtB,QAAL,GAAgB,IAAhB,CAFI,CAGJ;;AACAiB,YAAAA,KAAK,CAACc,cAAN,GAAuB,KAAvB;AACH,WALD,MAKK;AACD;AACAd,YAAAA,KAAK,CAACc,cAAN,GAAuB,IAAvB;AACH;AAEJ;;AAEDnB,QAAAA,gBAAgB,CAACK,KAAD,EAAO;AACnB,cAAG,KAAKhB,QAAL,IAAiB,KAAKD,QAAzB,EAAkC;AAC9B,gBAAIgC,UAAU,GAAGrC,EAAE,CAACsB,KAAK,CAACgB,WAAN,GAAoBP,CAApB,GAAwB,KAAKvB,UAAL,CAAgBuB,CAAzC,EAA2CT,KAAK,CAACgB,WAAN,GAAoBN,CAApB,GAAwB,KAAKxB,UAAL,CAAgBwB,CAAnF,CAAnB;AACA,iBAAKrB,IAAL,CAAU4B,WAAV,CAAsB,KAAKhC,UAAL,CAAgBwB,CAAhB,GAAoBM,UAAU,CAACN,CAArD,EAAuD,KAAKxB,UAAL,CAAgByB,CAAhB,GAAoBK,UAAU,CAACL,CAAtF;AACH;AACJ;;AAEDb,QAAAA,cAAc,CAACG,KAAD,EAAO;AACjB,eAAKjB,QAAL,GAAgB,KAAhB;AACH;;AAEDmC,QAAAA,WAAW,GAAG;AACV,cAAI,KAAK7B,IAAL,CAAU8B,MAAd,EAAsB;AAClB,iBAAK9B,IAAL,CAAU8B,MAAV,GAAmB,KAAnB;AACA,iBAAK9B,IAAL,CAAU+B,IAAV,CAAe,UAAf;AACH,WAHD,MAGO;AACH,iBAAK/B,IAAL,CAAU8B,MAAV,GAAmB,IAAnB;AACA,iBAAK9B,IAAL,CAAU+B,IAAV,CAAe,SAAf;AACH;AACJ;;AA7EmC,O","sourcesContent":["import { _decorator, input, Input, Component, Node, PolygonCollider2D, Intersection2D, UITransform, v3, v2} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nconst eventTarget = new EventTarget();\r\n\r\n\r\n@ccclass('MoveSprite')\r\nexport default class  extends Component {\r\n\r\n    // 状态\r\n    isActive: boolean = false;\r\n    isMoving: boolean = true;\r\n    startPoint;\r\n    mousePoint;\r\n\r\n    start() {\r\n        // this.node.on(Node.EventType.MOUSE_UP, this.event_mouse_up, this);\r\n        // this.node.on(Node.EventType.MOUSE_LEAVE, this.event_mouse_up, this);\r\n    }\r\n\r\n    onLoad () {\r\n        this.node.on(Node.EventType.TOUCH_START, this.event_mouse_down, this);\r\n        this.node.on(Node.EventType.TOUCH_MOVE, this.event_mouse_move, this);\r\n        this.node.on(Node.EventType.TOUCH_END, this.event_mouse_up, this);\r\n    }\r\n\r\n    onDestroy () {\r\n        this.node.off(Node.EventType.TOUCH_START, this.event_mouse_down, this);\r\n        this.node.off(Node.EventType.TOUCH_MOVE, this.event_mouse_move, this);\r\n        this.node.off(Node.EventType.TOUCH_END, this.event_mouse_up, this);\r\n    }\r\n\r\n    event_mouse_down(event){\r\n        \r\n        this.startPoint = this.node.getPosition();\r\n        this.mousePoint = event.getUILocation();\r\n        // 获取碰撞组件\r\n        const collider = this.node.getComponent(PolygonCollider2D);\r\n        // 如果没有碰撞组件直接返回\r\n        if (!collider) {\r\n            // 设置当前节点在父节点的 children 数组中的位置，使节点保持在最高层，不会被其他的节点覆盖\r\n            this.node.setSiblingIndex(10);\r\n            this.isActive = true;\r\n            return;\r\n        }\r\n        // 点击位置的坐标\r\n        const downPoint = event.getUILocation();\r\n        // 把UI窗口内的坐标位置转换成节点为中心点的坐标\r\n        const nodePoint = this.node.getComponent(UITransform).convertToNodeSpaceAR(v3(downPoint.x,downPoint.y));\r\n        // 多边形的顶点\r\n        const points = collider.points;\r\n        // 获取点击位置的坐标是否在多边形内\r\n        const is = Intersection2D.pointInPolygon(v2(nodePoint.x,nodePoint.y), points);\r\n        if (is) {\r\n            this.node.setSiblingIndex(10);\r\n            this.isActive = true;\r\n            // 如果点击的图形区域设置事件不可穿透\r\n            event.preventSwallow = false;\r\n        }else{\r\n            // 如果点击的是透明区域设置事件可穿透\r\n            event.preventSwallow = true;\r\n        }\r\n\r\n    }\r\n\r\n    event_mouse_move(event){\r\n        if(this.isMoving && this.isActive){\r\n            let movePointN = v2(event.getLocation().x - this.mousePoint.x,event.getLocation().y - this.mousePoint.y);\r\n            this.node.setPosition(this.startPoint.x + movePointN.x,this.startPoint.y + movePointN.y);\r\n        }\r\n    }\r\n\r\n    event_mouse_up(event){\r\n        this.isActive = false;\r\n    }\r\n\r\n    showandhide() {\r\n        if (this.node.active) {\r\n            this.node.active = false;\r\n            this.node.emit('fade-out');\r\n        } else {\r\n            this.node.active = true;\r\n            this.node.emit('fade-in');\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}